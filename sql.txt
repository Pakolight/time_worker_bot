'''
# Создает таблицу с id и именами пользователей
CREATE TABLE IF NOT EXISTS list_user(user_id int NOT NULL,
				   user_name text NOT NULL DEFAULT CURRENT_DATE,
				   PRIMARY KEY (user_id)
				   );

    #создает табличку
    cur.execute("""CREATE TABLE IF NOT EXISTS timelist(id_name serial NOT NULL,
                                                       date_st date NOT NULL DEFAULT CURRENT_DATE,
                                                       project text NOT NULL DEFAULT CURRENT_DATE,
                                                       tasks text,
                                                       desc_ex text,
                                                       other_ex numeric DEFAULT 0,
                                                       km numeric DEFAULT 0,
                                                       ex numeric DEFAULT 0,
                                                       time_start time NOT NULL,
                                                       time_end time,
                                                       costs numeric NOT NULL DEFAULT 12,
                                                       arg_time numeric NOT NULL DEFAULT 3600,
                                                       arg_km numeric NOT NULL DEFAULT 0.19,
                                                       PRIMARY KEY (id_name) );"""
                )

    #заносит данные в базу
    #cur.execute("""INSERT INTO timelist(time_start, time_end, ex) VALUES('9:30', '18:00', '10')""")


'''






CREATE TABLE IF NOT EXISTS timelist(id_name serial NOT NULL,
				   date_st date NOT NULL DEFAULT CURRENT_DATE,
				   project text NOT NULL DEFAULT CURRENT_DATE,
				   tasks text,
				   desc_ex text,
				   other_ex numeric DEFAULT 0,
				   km numeric DEFAULT 0,
				   ex numeric DEFAULT 0,
				   time_start time NOT NULL,
				   time_end time,
				   costs numeric NOT NULL DEFAULT 12,
				   arg_time numeric NOT NULL DEFAULT 3600,
				   arg_km numeric NOT NULL DEFAULT 0.19,
				   PRIMARY KEY (id_name)
				  );

------удаляет строку -----
--DELETE FROM timelist
--where id_name = 1;

------вставляет значения -----
--INSERT INTO timelist(time_start, time_end, km, other_ex) VALUES('13:00', '19:00', '33', '12');

-------обнуляет таблицу----
--TRUNCATE TABLE timelist;

--выводит итоговую таблицу---
update kostiantyn_580359043
set desc_ex = (km * arg_km) + other_ex;

SELECT date_st, project, tasks, time_start, time_end,
time_end - time_start as duration, desc_ex, km, km * arg_km as km_cost ,
other_ex, ex, (((extract (epoch from (time_end - time_start)) * costs) / arg_time ) + ex ) as price
from kostiantyn_580359043;


--select *
--from timelist;

---Выводит интервал между двумя днями в секундах---
update kostiantyn_580359043
set price = ((extract (epoch from (time_end - time_start)) * costs) / arg_time ) + ex ;


-------РАБОЧАЯ---
--SELECT (to_number(to_char((time_end - time_start), 'ssss'  ), '99999') * costs) / arg_tf as
--from test2

---Подсчитывает общую стоимость колонки с зп за день, выводит итоговую зп--

update kostiantyn_580359043
set ex = (km * arg_km) + other_ex;

update kostiantyn_580359043
set price = ((extract (epoch from (time_end - time_start)) * costs) / arg_time ) + ex ;

SELECT SUM(price) as my_paycheck
from kostiantyn_580359043;
